{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imported relevant packages\n",
    "import numpy as np \n",
    "import netCDF4 as nc\n",
    "import matplotlib.pyplot as plt \n",
    "import matplotlib.dates as mdates\n",
    "from datetime import datetime, timedelta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Created a list with the names of each relevant dataset to be examined\n",
    "# Data extracted from VIIRS/SNPP Deep Blue Level 3 daily aerosol data, 1x1 degree grid from NASA's LAADS DAAC\n",
    "list_files = [\"mar_15.nc\",\"mar_16.nc\",\"mar_17.nc\",\"mar_18.nc\"]\n",
    "\n",
    "# Defined the coordinates of Cabo Frio\n",
    "lat = -22.5\n",
    "lon = -42.5\n",
    "\n",
    "# Defined lists to hold relevant values\n",
    "record_datetime = []\n",
    "record_max_aerosol = []\n",
    "record_mean_aerosol = []\n",
    "record_min_aerosol = []\n",
    "record_aerosol_hist = []\n",
    "\n",
    "# Iteratively looked at the dataset of each day measurements were taken\n",
    "for filename in list_files:\n",
    "    ds = nc.Dataset(filename)\n",
    "    \n",
    "    # Set filters for the data to only look at measurements from Cabo Frio\n",
    "    latitude_filter = np.array(ds.variables['Latitude']) == lat\n",
    "    longitude_filter = np.array(ds.variables['Longitude']) == lon\n",
    "    latitude_and_longitude_filter = latitude_filter & longitude_filter\n",
    "    \n",
    "    # Extracted the range (max,mean,min) of aerosol optical thickness over the relevant space\n",
    "    max_aerosol = np.array(ds.variables['Aerosol_Optical_Thickness_550_Land_Ocean_Maximum'])\n",
    "    max_aerosol[max_aerosol<0] = np.nan #exclude invalid values\n",
    "    record_max_aerosol.append(max_aerosol[latitude_and_longitude_filter])\n",
    "    \n",
    "    mean_aerosol = np.array(ds.variables['Aerosol_Optical_Thickness_550_Land_Ocean_Mean'])\n",
    "    mean_aerosol[mean_aerosol<0] = np.nan #exclude invalid values\n",
    "    record_mean_aerosol.append(mean_aerosol[latitude_and_longitude_filter])\n",
    "    \n",
    "    min_aerosol = np.array(ds.variables['Aerosol_Optical_Thickness_550_Land_Ocean_Minimum'])\n",
    "    min_aerosol[min_aerosol<0] = np.nan #exclude invalid values\n",
    "    record_min_aerosol.append(min_aerosol[latitude_and_longitude_filter])\n",
    "    \n",
    "    # Extracted the histogram of measured aerosol types over the relevant space\n",
    "    types = np.array(ds.variables['Aerosol_Type_Land_Ocean_Histogram'])\n",
    "    record_aerosol_hist.append(np.concatenate(types[:,latitude_and_longitude_filter]))\n",
    "    \n",
    "    #Processed the datetime record to a form that can be plotted:\n",
    "    record_datetime.append(datetime.strptime(ds.time_coverage_start[:10], \"%Y-%m-%d\"))    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x288 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "histograms of retrieved aerosol type over land and ocean. Indices (counting from 0) 0=dust(land+ocean), 1=smoke, 2=high altitude smoke, 3=pyrocumulonimbus clouds, 4=non-smoke fine mode, 5=mixed(land+ocean), 6=background(land+ocean maritime), 7=fine dominated\n"
     ]
    }
   ],
   "source": [
    "# Plotted the distribution of aerosol types measured in each day\n",
    "fig, axs = plt.subplots(1,4,figsize=(15,4))\n",
    "for i,ax in enumerate(axs.flat):\n",
    "    plt.subplot(141+i,sharey=axs[0])\n",
    "    plt.hist(range(0,8),weights=record_aerosol_hist[i],color='k',edgecolor='w')\n",
    "    plt.title(str(record_datetime[i])[:10])\n",
    "    plt.xlabel('Node degree',fontsize=13)\n",
    "    plt.xticks(range(0,8))\n",
    "plt.suptitle('Aerosol Type Distribution',fontsize=15,y=1.03)\n",
    "fig.text(0.08, 0.5, 'Count', va='center', rotation='vertical',fontsize=13)\n",
    "plt.show()\n",
    "\n",
    "# Printed dataset reference of what is plotted\n",
    "print(ds.variables['Aerosol_Type_Land_Ocean_Histogram'].long_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "aerosol optical thickness estimated at 550 nm over land and ocean\n"
     ]
    }
   ],
   "source": [
    "# Created a figure\n",
    "fig, ax = plt.subplots(figsize=(8, 6))\n",
    "\n",
    "# Plotted the corresponding aerosol optical thickness range for each day\n",
    "ax.scatter(record_datetime, record_max_aerosol,color='purple',label='Maximum')\n",
    "ax.scatter(record_datetime, record_mean_aerosol,color='b',label='Mean')\n",
    "ax.scatter(record_datetime, record_min_aerosol,color='g',label='Minimum')\n",
    "\n",
    "# Formatted the plot's axes\n",
    "ax.set_xlim([min(record_datetime)- timedelta(days=1), max(record_datetime)+ timedelta(days=1)])\n",
    "ax.set_ylim([0,max(record_max_aerosol)+0.025])\n",
    "plt.gcf().autofmt_xdate()\n",
    "\n",
    "# Created labels for the plot\n",
    "plt.title('Aerosol optical thickness during the relevant dates',fontsize=15)\n",
    "plt.xlabel('Date',fontsize=13)\n",
    "plt.ylabel('Aerosol optical thickness',fontsize=13)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "# Printed dataset reference of what is plotted\n",
    "print(ds.variables['Aerosol_Optical_Thickness_550_Land_Ocean_Mean'].long_name)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
